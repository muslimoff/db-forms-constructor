<?xml version="1.0" encoding="utf-8" ?>
<project name="ConstructorApp" default="deployNew" basedir=".">
      <record name="antbuild.log"></record>
      <property file="war/WEB-INF/application.properties" />
      <!-- Configure path to GWT SDK -->
      <property name="library.home" location="C:/gwt-git/lib" />
      <property name="gwt.sdk" location="${library.home}/gwt-2.7.0" />
      <property name="smartgwt" location="${library.home}/smartgwt-5.1p_20160108" />
      <property name="simplexml" location="${library.home}/simple-xml-2.7" />
      <property name="ofcgwt" location="${library.home}/ofcgwt.2.0.1.b" />
      <property name="xmlp" location="${library.home}/bipublisher11" />
      <property name="commonsIO" location="${library.home}/apache.commons.io.2.4" />
      <property name="catalina.home" location="C:/Tomcat/Tomcat 8.0" />
      <property name="catalina.servicename" value="Tomcat8" />
      <property name="builds.home" location="C:/Users/test/Google Диск/fc/builds" />
      <property name="jdbc" location="${library.home}/jdbc" />
      <!--
      <property name="builds.home" location="builds" />
      -->

      <path id="project.class.path">
            <pathelement location="war/WEB-INF/classes" />
            <pathelement location="${smartgwt}/smartgwt_mod.jar" />
            <!--
            <pathelement location="${smartgwt}/smartgwt-skins-add.jar" />
            <pathelement location="${smartgwt}/smartgwt-skins.jar" />
            <pathelement location="${simplexml}/jar/simple-xml-2.7.jar" />
            <pathelement location="${xmlp}/*.jar" />
            -->

            <pathelement location="${ofcgwt}/ofcgwt.jar" />
            <pathelement location="${gwt.sdk}/gwt-user.jar" />
            <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA.jar" />
            <pathelement location="${gwt.sdk}/validation-api-1.0.0.GA-sources.jar" />

            <fileset dir="${gwt.sdk}" includes="gwt-dev*.jar" />
            <!-- Add any additional non-server libs (such as JUnit) -->
            <fileset dir="war/WEB-INF/lib" includes="**/*.jar" />
      </path>

      <target name="build_number" description="Application version auto increment">
            <propertyfile file="war/WEB-INF/application.properties" comment="Build Number for ANT.">
                  <entry key="build.number" type="int" operation="+" default="1" />
            </propertyfile>
            <property name="app.version" value="${major.minor}.${build.number}" />
            <echo message="Generated version: ${app.version}" />
      </target>

      <target name="libs" depends="build_number" description="Copy libs to WEB-INF/lib">
            <!--
            <mkdir dir="war/WEB-INF/lib" />
            <!++
            <copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet.jar" />
            <copy todir="war/WEB-INF/lib" file="${simplexml}/jar/simple-xml-2.7.jar" />
            <copy todir="war/WEB-INF/lib" file="${commonsIO}/commons-io-2.4.jar" />
            ++>
-->
            <copy todir="war/WEB-INF/lib">
                  <fileset dir="${xmlp}" includes="**/*.jar" />
                  <fileset dir="${commonsIO}" includes="commons-io-2.4.jar" />
                  <fileset dir="${gwt.sdk}" includes="gwt-servlet.jar" />
                  <fileset dir="${simplexml}/jar" includes="simple-xml-2.7.jar" />
                  <fileset dir="${jdbc}" includes="jdbc14.jar, nls_charset12.jar" />
            </copy>

            <!--
            <copy todir="war/WEB-INF/lib">
                  <fileset dir="${gwt.sdk}" includes="gwt-servlet.jar" />
            </copy>     
-->
            <!-- Add any additional server libs that need to be copied -->

            <!-- Создаем каталог. javac не создает автоматом  -->
            <mkdir dir="war/WEB-INF/classes" />
            <!-- Удаляем ранее скомпилированное. Так необходимо для корректной работы javac с указанием source="1.7" target="1.7" -->
            <delete>
                  <fileset dir="war/WEB-INF/classes">
                        <include name="**/*.class" />
                  </fileset>
            </delete>
            <!-- Косяк в SmartGWT 3... теперь на сервере нужен LogicalDate*... -->
            <unzip dest="war/WEB-INF/classes">
                  <patternset>
                        <include name="/com/smartgwt/client/util/LogicalDate*.class" />
                  </patternset>
                  <fileset file="${smartgwt}/smartgwt_mod.jar" />
            </unzip>
      </target>

      <target name="javac" depends="libs" description="Compile java source">

            <javac srcdir="src"
                   includes="**"
                   verbose="No"
                   encoding="utf-8"
                   destdir="war/WEB-INF/classes"
                   source="1.6"
                   target="1.6"
                   nowarn="true"
                   debug="true"
                   debuglevel="lines,vars,source"
                   includeantruntime="false">
                  <classpath refid="project.class.path" />
                  <compilerarg value="-Xlint:deprecation" />
            </javac>
      </target>

      <target name="gwtc" depends="javac" description="GWT compile to JavaScript">
            <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
                  <classpath>
                        <pathelement location="src" />
                        <path refid="project.class.path" />
                  </classpath>
                  <!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
                  <jvmarg value="-Xmx256M" />
                  <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
                  <arg value="com.abssoft.constructor.ConstructorApp" />
            </java>
      </target>


      <target name="build" depends="gwtc" description="Build this project" />
      <target name="buildOnly" depends="build_number" description="Build this project without compilation" />

      <target name="copyFiles" depends="build" description="Copy files">


            <copy todir="war/constructorapp/sc/resources">
                  <fileset dir="resources" excludes="**/.svn" />
            </copy>

            <copy todir="war/constructorapp/codemirror-5.11">
                  <fileset dir="../../lib/codemirror-5.11/" excludes="**/.svn" />
            </copy>
      </target>

      <target name="war" depends="copyFiles" description="Create a war file">

            <!--Архивируем исходники-->
            <zip destfile="war/src.${app.version}.zip" update="true">
                  <zipfileset dir="src" includes="**/*.java, **/*.xml" />
            </zip>
            <!--Подстановка версии-->
            <copy file="war/ConstructorApp.html" tofile="war/ConstructorApp_war.html" overwrite="true">
                  <filterchain>
                        <replacetokens>
                              <token key="version" value="${app.version}" />
                        </replacetokens>
                        <tokenfilter>
                              <replacestring from="constructorapp/constructorapp.nocache.js"
                                             to="constructorapp/constructorapp.nocache.js?${app.version}" />
                        </tokenfilter>
                  </filterchain>
            </copy>

            <!--Создание версии с библиотеками и Java-скриптами SmartGWT-->
            <zip destfile="${builds.home}/${app.version}/ConstructorApp.${app.version}.war">
                  <zipfileset dir="war" excludes="**/.svn, ConstructorApp*.html, **/.air" />
                  <zipfileset dir="war" includes="ConstructorApp_war.html" fullpath="ConstructorApp.html" />

                  <!--Не заменять в prefix значение на переменную - в этом случае архивирует с полным путем!
                  <zipfileset dir="${xmlp}" includes="*.jar" prefix="WEB-INF/lib" />
                  <zipfileset dir="${commonsIO}" includes="commons-io-2.4.jar" prefix="WEB-INF/lib" />
                  <zipfileset dir="${gwt.sdk}" includes="gwt-servlet.jar" prefix="WEB-INF/lib" />
                  <zipfileset dir="${simplexml}/jar" includes="simple-xml-2.7.jar" prefix="WEB-INF/lib" />-->
            </zip>

            <!--Замена var isomorphicDir для "облегченной" версии-->
            <copy file="war/ConstructorApp_war.html" tofile="war/ConstructorApp_withoutLibs_war.html" overwrite="true">
                  <filterchain>
                        <tokenfilter>
                              <replacestring from="var isomorphicDir = &quot;constructorapp/sc/&quot;;"
                                             to="var isomorphicDir = &quot;../../sc/&quot;;" />
                        </tokenfilter>
                  </filterchain>
            </copy>

            <!--Создание версии без библиотек и Java-скриптов SmartGWT-->
            <zip destfile="${builds.home}/${app.version}/ConstructorApp_withoutLibs.${app.version}.war">
                  <zipfileset dir="war"
                              excludes="**/.svn, **/WEB-INF/lib/**, **/WEB-INF/tmp/serialization/*.xml, **/constructorapp/sc/**, ConstructorApp*.html, **/.air" />
                  <zipfileset dir="war" includes="ConstructorApp_withoutLibs_war.html" fullpath="ConstructorApp.html" />
            </zip>

            <!--Удаляем временные файлы-->
            <delete>
                  <fileset dir="war">
                        <include name="ConstructorApp_war.html" />
                        <include name="ConstructorApp_withoutLibs_war.html" />
                        <include name="src*.zip" />
                  </fileset>
            </delete>
      </target>

      <target name="deployNew" depends="war" description="Copy a war file to Apache">
            <copy todir="${catalina.home}\webapps" file="${builds.home}/${app.version}/ConstructorApp.${app.version}.war" />
      </target>

      <target name="javadoc" depends="deployNew">
            <javadoc encoding="UTF-8"
                     access="public"
                     author="true"
                     classpath="${gwt.sdk}\gwt-dev-oophm.jar;C:\GWT\smartgwt-1.1\smartgwt-skins.jar;${gwt.sdk}\gwt-dev-windows.jar;C:\GWT\jdbc14.zip;C:\GWT\smartgwt-1.1\smartgwt.jar;${gwt.sdk}\gwt-user.jar;C:\GWT\nls_charset12.zip;C:\GWT\eclipse 3.4\plugins\org.junit_3.8.2.v20080602-1318\junit.jar"
                     destdir="doc"
                     nodeprecated="false"
                     nodeprecatedlist="false"
                     noindex="false"
                     nonavbar="false"
                     notree="false"
                     packagenames="com.abssoft.constructor.client.common,com.abssoft.constructor.client.data,com.abssoft.constructor.client,com.abssoft.constructor.server,com.abssoft.constructor.client.form,com.abssoft.constructor.client.data.common,com.abssoft.constructor.client.metadata,com.abssoft.constructor.client.event"
                     source="1.6"
                     sourcepath="src"
                     splitindex="true"
                     use="true"
                     version="true">
                  <link href="jar:file:/C:/Oracle/ora92/jdbc/doc/javadoc.zip!/" />
                  <link href="file:${gwt.sdk}/doc/javadoc/" />
                  <link href="file:${smartgwt}/doc/javadoc/" />
            </javadoc>
      </target>
      <!--
      <target name="StopTomcat" depends="war" description="Stop Tomcat">
            <exec executable="net">
                  <arg value="stop" />
                  <arg value="${catalina.servicename}" />
            </exec>
      </target>

      <target name="deploy" depends="StopTomcat" description="Copy a war file to Apache">
            <copy todir="${catalina.home}\webapps" file="ConstructorApp.war" />
      </target>


      <target name="cleanApache" depends="deploy" description="Apache dirs clean">
            <delete dir="${catalina.home}\webapps\ConstructorApp" failonerror="false" />
      </target>

      <target name="StartTomcat" depends="cleanApache" description="Start Tomcat">
            <exec executable="net">
                  <arg value="start" />
                  <arg value="${catalina.servicename}" />
            </exec>
      </target>
      -->

      <target name="clean" description="Cleans this project">
            <delete dir="war/WEB-INF/classes" failonerror="false" />
            <delete dir="war/constructorapp" failonerror="false" />
      </target>

</project>