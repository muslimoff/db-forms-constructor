00:00:00,250 [WARN] The class com.google.gwt.dev.HostedMode is deprecated and will be removed -- use com.google.gwt.dev.DevMode instead
---------------------------- Глюки ------------------------
 +1. setFrozen = false в дереве - exception...
 +2. Ошибка в дереве, если все колонки кроме дерева скрыты (см. DB_NAV при SHOW_ON_GRID = "N" для ENTITY_TYPE)
 +3. поле IS_FOLDER отображается для колонки с типом FORM_COLUMNS.TREE_FIELD_TYPE="3" 
 +4. Одновременный вызов одной и той же формы детализации из разных контейнеров приводит к ошибке получения метаданных и построения всей формы в одном из них.
     Разрулится одним из: I.15, II.2, II.3. Или нужно ждать, пока один экземпляр формы не получит все данные..
     Разрулилось I.15     
  >>>5. При повторном редактировании в RowEditorTab в гриде слетает статус Edit notSaved.
  >>>6. Ошибка при десериализации LinkedHashMap - приходится использовать несортированный (например класс StaticLookup, MenusArr).        			


-----------------------------VVS MZ------------------------
 +1. 1. При создании записей в детейл-форме - возможность подставлять в поле значения из мастер-формы (Важно для master-detail форм со скрытым master_id).
  >>>2. 2. При создании новой записи в гриде давать возможность копировать запись с верхнего поля (настройка form_columns). Также - значение по умолчанию
  >>>3. 1. Записи с признаками read_only, delete_allowed, update_allowed. 
  >>>4. 2. Указание свойств столбцов записи (типа 
        					<COLUMN_PROP col_name="COL_NAME1" read_only="true"/>
        					<COLUMN_PROP col_name="COL_NAME2" style="color:red"/>)
  >>>5. 1. Столбцы read_only (настройка form_columns).
  6. 2. Refresh в случае, если метаданные формы изменились - переформировать форму полностью.
  7. 2. Множественный динамический детейл - При повторном показе таба, если метаданные формы изменились - удалить таб и создать заново.
 +8. 1. После создания новой формы, при обращении к ней, перечитать или дополнить menusArr.
+-9. 1. Корректное отслеживание переключения между формами редактора для отражения кнопок. Не работает для RichTextItem.
 >>>10. 1. новый тип "Refresh" с rebuild (для матриц). Объедиить с п. VVS MZ. 6. 
 >>>11. 1. Действие PL/SQL типа before_refresh.
+12. 1. Window.alert на клиенте заменить на функцию с обработкой статусов (ошибка/предупреждение/инфо/дебаг)
+13. 1. Lookup форма - свойства поля "Не отображать"
 14. 1. Пункт 20 г)
+15. 1. Очистка табиков редактора при создании новой записи. 
	-- При отмене создания новой записи - не очищаются поля табика редактора 
+16. 1. Вывести refresh, next record в действия из гвоздями прибитых.

---------------------------- I ----------------------------
 +1. Иконки - создать табличку и сделать ссылки на нее вместо явного указания
 +2. Переключение скинов.
 +3. Передача при развертывании узла дерева всех значений текущей строки, а не только parent_id.
 +4. Возможность настройки ширины и высоты главной формы.
 +5. Статусбар - уменьшить ширину Rows.
 +6. Возможность настройки сортировки табиков детейлов.
       +а) передача альтернативного названия и иконки для детейл-форм
       +б)  Объеденить FORM_RELATIONSHIPS и FORM_EDITOR_TABS
       +в)  собственно сортировка (кроме динамических детейлов, которые отображаются после всех статических табиков)
 +7. Динамическое создание форм детализации
       +а) множественная детализация (как в showCase)
       +б) пересоздаваемый детейл
       +в) корректная обработка колонки-детейла (отвязаться от FORM_CODE). Возможность одновременной обработки нескольких колонок
       +г) переделка на обработки только поля field_type по умолчанию (Детейл справа, иконка и название табика брать
    	   из данных детейл-формы). Настройку табиков использовать только при необходимости. Отказ от нескольких типов детейлов в табах.
    	
 +8. Табики слева, справа и т.д. - позиция.
       +а) собственно обработка позиции
       -б) проблемы с вертикальным текстом. *перенесено во вторую очередь, №18
 +9. Подсказки:
       +а) в меню форм (forms.description) - в меню нет хинтов - не рулится... Разрулил...
       +б) на колонках (FORM_COLUMNS.description)       
       +в) на полях формы редактирования (FORM_COLUMNS.description)
       +г) подсказка из другого поля
 10. Создание настроек полей формы редактирования (FORM_COLUMNS.FIELD_TYPE)
  		а) числовой 
  		б) показывать заголовок(show title))
       +в) ширина, в т.ч. и "*".
  		г) дата
  	   +д) длинный текст, разворачивать на весь таб 
  		е) длинный текст с подсветкой синтаксиса
	   +з) Лукапы простые
  	   *и) Лукапы SQL - перенесено в п. 20
  	   +к) Иконка
  	   +л) фрейм по URL-у.
  		
 11. Создание 
       +а) таблицы действий (actions) для формы (form_code, action_code, procedure_owner, procedure_package_name, 
		 procedure_name, action_display_name, icon, default_new_prefix(p_), default_old_prefix(p_old_), 
		 action_type (insert, update, delete, filter, clone, report, new form...))
        б) таблицы маппинга полей формы к процедурам действий (типа...p_old_column_name, p_new_column_name)
       (*form_code, *action_code, *column_code, procedure_parm_name).
       в) срочно: 
       			--1. Разделяем FormActionMD на клиент и серверный кусок.
		       	--2. Процедуры DML update insert delete в одной записи
       			+3. Обработка ins del на клиенте.
		        +4. проблемы с кэшем при сохранении записи - datasource не пересоздается.
		        5. Редактирование только при наличии действий. Или при выходе из записи возвращать предыдущее состояние для нередактируемых, удаление/вставку запретить.

		         
 +12. Взаимодействие грида и формы редактирования для обновления/вставки.
 +13. Показвать нижний тулбар MainForm или нет.
  14. Дерево - тип поля "Количество дочерних" (child_count)
  15. Object_version_number для всех таблиц метаданных - чтобы не дергать запросы к формам лишний раз.
  16. Все существующин настройки приложения вынести из констант в отдельную табличку PARAMS.
 +17. setFrozen для колонок вынести в параметр таблички
 +18. Обработка действий:
       +а) обновления записи
       +б) вставки записи
       +в) удаления записи
       +г) Refresh all records
  19. Авторизация как в Apex (БД User или custom)
  20. Lookupы SQL.
      +а) используем механизм построения таблиц из форм. Если полей 1 (значение) или 2(ID и значение)
          - заголовок таблицы не показываем, просто мапим setValueField и setDisplayField. Если полей больше,
          то отображаем поля посредством setPickListFields.
      ?б) Для гридов только для чтения используем только данные существующих в главном запросе идентификаторов/значений для setCellFormatter при открытии формы.
      +в) Для редактируемых гридов используем фильтрацию по строке главного запроса.
       г) Использование доп. столбца как DisplayField, а Lookup - только для фильтрации. - для тяжелых запросов.
          +1. Lookup Type в field type
           2. Comboboxes в initialFiletr
       д) очистка зависимых полей при изменении критериев лукапа-родителя
  
---------------------------- II ---------------------------
  1. Многозапросные деревья
  2. Переделка получения метаданных с RPC на XML.
  3. переделка на XMLDB
 +4. Login в приложении.
 +5. Генерация пунктов меню
  6. Сохранение настроек пользователя в БД
  7. Отчетник
  8. Дерево 
  		а) Возможность инициализации RootNode
  		б) Поиск в дереве
  		в) Перетаскивание в дереве
  		  		
 +9. Множественная сортировка в гриде
 10. Фильтры простые и сложные
+12. Индикация текущей субформы для того, чтобы пользователь не терялся при сохранении...
 13. Проверка на зацикливание в подчиненных формах (в случае автоматического формирования динамического детейла при открытии мастер-формы).
 14. Превращение  табиков в форму и обратно.
 15. Одновременная работа со множеством серверов (например Афина и OEBS или SQL Navigator).
 16. Поддержка нескольких языков. 
 17. Итоги в нижнем тулбаре (tree_path, avg, count, sum, min, max...) и отображение тулбара только после.
 18. Проблемы с вертикальными табиками - текст отображается горизонтально, нужно вертикально. 
 19. Debug на клиенте (как в ODAC).

 
 ---------------------------- III -------------------------
 +2. Формы типа Frame
  3. Google Maps и Docs API и диаграмки
  4. Динамическое изменение любого свойства формы для строки (запрос возвращает поле в строке вида табличка:поле:значение, например FORM_TABS:TAB_NAME:"Новое название")
 +5. Cashed Update.
 11. ColumnTree  
  
 ------------------- Не будет никогда ---------------------
  1. Дерево с различными табиками-редакторами на различных узлах. Если хотите - используйте динамическую подгрузку детейл-форм.
  2. Вызов статических форм, как у Алексеева